#!/bin/bash
# -*- coding: utf-8 -*-
#
#       gsrc
#       
#       Copyright Â© 2012, 2013, 2014 Brandon Invergo <brandon@invergo.net>
#       
#       This file is part of GSRC.
#
#       GSRC is free software: you can redistribute it and/or modify
#       it under the terms of the GNU General Public License as published by
#       the Free Software Foundation, either version 3 of the License, or
#       (at your option) any later version.
#
#       GSRC is distributed in the hope that it will be useful,
#       but WITHOUT ANY WARRANTY; without even the implied warranty of
#       MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#       GNU General Public License for more details.
#
#       You should have received a copy of the GNU General Public License
#       along with GSRC.  If not, see <http://www.gnu.org/licenses/>.

# This is a convenience script primarily aimed at facilitating the
# discovery of GSRC packages.  Thus, there are functions for searching
# by keyword(s), displaying information on a package, and then getting
# the path to the package so you can easily install it, view its
# source code, etc.  This script is rather simple, so it is
# straight-forward to extend it by wrapping more GSRC functionality
# with it.  Put this script somewhere in your PATH so you can access
# GSRC (and BioSRC) from any directory.

GSRCDIR=@abs_srcdir@
MAKE_ARGS="-s USE_COLOR=y"

print_usage () {
cat <<EOF
Usage: gsrc [info|path|search] [PACKAGE|TERMS]
Install, uninstall and discover info about GSRC packages
    
  info        display info about PACKAGE
  path        display the path to PACKAGE
  search      search for packages relevant to TERMS
  install     install PACKAGE
  uninstall   uninstall PACKAGE
  remove      completely remove PACKAGE
  update      update PACKAGE
    
PACKAGE names may be passed with or without their project dirname (i.e.
both 'pkg/gnu/hello' and 'hello' are fine). 

Searches are performed using extended regular expressions. See the 
'grep' documentation for more information. A list of packages matching 
any of the TERMS will be displayed.

Report bugs to: bug-gsrc@gnu.org
GSRC home page: <http://www.gnu.org/software/gsrc/>
General help using GNU software: <http://www.gnu.org/gethelp/>
EOF
}
#DIRS="gnu,gnustep,gnualpha,gnome,freedesktop,gstreamer,other,bio,local,deps,libs,tools"
DIRS=gnu,gnustep,gnualpha,gnome,freedesktop,gstreamer,other,bio

get_pkg_path () {
    if [ -d $GSRCDIR/$1 ]; then
	pkg_path=$GSRCDIR/$1
    else
	for dir in pkg/{gnu,gnustep,gnualpha,gnome,freedesktop,gstreamer,other,bio}; do
	    p=$GSRCDIR/$dir/$1
	    if [ -d $p ]; then
		pkg_path=$p
		break
	    fi
	done
    fi
    if [[ "x$pkg_path" == "x" ]]; then
	echo "Package '$1' does not exist"
	exit 1
    fi
}

do_install () {
    get_pkg_path $1
    make $MAKE_ARGS -C $pkg_path install
}

do_uninstall () {
    get_pkg_path $1
    make $MAKE_ARGS -C $pkg_path uninstall
}

do_remove () {
    get_pkg_path $1
    do_uninstall $1
    make $MAKE_ARGS -C $pkg_path uninstall-pkg
} 

do_update () {
    get_pkg_path $1
    make $MAKE_ARGS -C $pkg_path update
}

do_info () {
    get_pkg_path $1
    make $MAKE_ARGS -C $pkg_path pkg-info 
}

do_search () {
    terms=""
    for term in $@; do
	terms="$terms -e$term"
    done
    # This is insane and stupid and slow.
    # My kingdom for a grep option that restricts the search to the 
    # first N lines so I can do this:
    # grep -E -q i $terms ${GSRCDIR}/{bio,libs,tools}/*/Makefile
    for pkg in ${GSRCDIR}/pkg/{gnu,gnustep,gnualpha,gnome,freedesktop,gstreamer,other,bio}/*; do
	sed "/GARVERSION/d;/PATCHNUM/d;/HOME_URL/d;/^#/d;/^#####$/q" $pkg/Makefile | \
	    grep -E -q -i $terms && \
	    (make $MAKE_ARGS -C $pkg pkg-info-curt)
    done
}

if [ $# -lt 2 ]; then
    print_usage
    exit 1
fi

case $1 in
    install)
        do_install $2 ;;
    uninstall)
        do_uninstall $2 ;;
    remove)
        do_remove $2 ;;
    update)
        do_update $2 ;;
    info)
	    do_info $2 ;;
    path)
	    get_pkg_path $2
	    echo $pkg_path ;;
    search)
	    shift
	    do_search $@ ;;
    *)
	    print_usage
	    exit 1 ;;
esac
exit 0

